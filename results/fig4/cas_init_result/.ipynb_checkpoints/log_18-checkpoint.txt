#INFO: **** input file is /pscratch/sd/w/whe1/vqe-casscf/run_figure_4_H4.py ****
import json
import numpy as np
import scipy
from pyscf import gto, scf, mcscf
import sys
import time
import os
from vqe_driver import PennyLaneSolver, perm_orca2pyscf

FILE = "data_H4/inference.json"

# Load data once globally
with open(FILE, "r") as file:
    data = json.load(file)
pos_l = data["pos"]
elements_l = data["elements"]
proj_l = data["proj"]
name_l = data["name"]


def run_casscf_with_guess(mol, mo_guess, ncas, nelecas, label=""):
    print(f"\nRunning CASSCF with {label} initial guess...")
    mf_init = scf.RHF(mol); mf_init.kernel()
    mc = mcscf.CASSCF(mf_init, ncas=ncas, nelecas=nelecas)
    mc.fcisolver = PennyLaneSolver(mf_init)
    mc.mo_coeff = mo_guess
    mc.verbose = 0  # suppress PySCF banner so we control output
    
    # Count VQE calls directly
    vqe_call_count = {"count": 0}
    original_kernel = mc.fcisolver.kernel
    
    def wrapped_kernel(*args, **kwargs):
        vqe_call_count["count"] += 1
        return original_kernel(*args, **kwargs)
    
    mc.fcisolver.kernel = wrapped_kernel
    
    # Track counts and print
    counts = {"macro": 0, "jk_total": 0, "jk_current_macro_max": 0, "last_macro": 0}
    def _cb(envs):
        if "imacro" in envs:
            current_macro = int(envs["imacro"])
            
            if current_macro > counts["last_macro"] and counts["last_macro"] > 0:
                counts["jk_total"] += counts["jk_current_macro_max"]
                counts["jk_current_macro_max"] = 0
            
            counts["macro"] = current_macro
            counts["last_macro"] = current_macro
            
        if "njk" in envs:
            # Track the maximum njk within this macro iteration
            counts["jk_current_macro_max"] = max(counts["jk_current_macro_max"], int(envs["njk"]))
            
        if "e_tot" in envs:
            print(f"macro iter {counts['macro']:2d}  CASSCF E = {envs['e_tot']:.14f}")
    
    mc.callback = _cb
    t0 = time.time()
    e_tot, *_ = mc.kernel()
    t1 = time.time()
    
    # Add the final macro iteration's JK count
    if counts["macro"] > 0:
        counts["jk_total"] += counts["jk_current_macro_max"]
    
    # Calculate micro so that macro + micro = VQE calls
    total_vqe = vqe_call_count["count"]
    macro = counts["macro"]
    micro = total_vqe - macro
    
    print(f"CASSCF converged in {macro} macro ({counts['jk_total']} JK {micro} micro)")
    print(f"CASSCF energy = {e_tot:.14f}")
    print(f"CASSCF ({label} guess) took {t1 - t0:.2f} seconds")
    print(f"VQE calls: {total_vqe} = {macro} macro + {micro} micro")
    return mc


def process_index(ind):
    pos = pos_l[ind]
    elements = elements_l[ind]
    proj = np.array(proj_l[ind])
    name = name_l[ind]

    atom = [[ele, tuple(coord)] for ele, coord in zip(elements, pos)]

    log_path = f"results/fig4/cas_init_result/log_{name[:-5]}.txt"
    os.makedirs(os.path.dirname(log_path), exist_ok=True)
    sys.stdout = open(log_path, "w")

    print(name)
    print(atom)

    # Overlap and projection matrix processing
    S = gto.M(atom=atom, basis="cc-pVDZ").intor("int1e_ovlp")
    sqrtS = scipy.linalg.sqrtm(S).real
    perm = perm_orca2pyscf(atom=atom, basis="cc-pVDZ")
    proj = perm @ proj @ perm.T
    eigvals, eigvecs = np.linalg.eig(proj)
    idx = np.argsort(eigvals)[::-1]
    sorted_eigvecs = eigvecs[:, idx]
    sorted_eigvecs = np.linalg.inv(sqrtS) @ sorted_eigvecs
    rand_orbitals = sorted_eigvecs

    # Build molecule
    mol = gto.M(atom=atom, basis='cc-pVDZ', spin=0, charge=0, verbose=4, output=log_path)

    # Run HF
    mf_hf = scf.RHF(mol)
    mf_hf.kernel()
    hf_orbitals = mf_hf.mo_coeff

    # Run CASSCFs
    run_casscf_with_guess(mol, rand_orbitals, ncas=4, nelecas=4, label="NN")
    run_casscf_with_guess(mol, hf_orbitals, ncas=4, nelecas=4, label="HF")

    sys.stdout.close()
    sys.stdout = sys.__stdout__

if __name__ == "__main__":
    for i in range(0,23):
        process_index(i)

    print("Files saved to results/fig4/cas_init_result/")
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='login07', release='5.14.21-150500.55.97_13.0.78-cray_shasta_c', version='#1 SMP Thu Mar 13 20:09:44 UTC 2025 (330b47d)', machine='x86_64')  Threads 2
Python 3.12.9 | packaged by conda-forge | (main, Feb 14 2025, 08:00:06) [GCC 13.3.0]
numpy 2.2.3  scipy 1.15.2  h5py 3.13.0
Date: Sun Aug 24 20:20:12 2025
PySCF version 2.9.0
PySCF path  /global/homes/w/whe1/.local/perlmutter/pytorch2.6.0/lib/python3.12/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 H      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 H      2.099999904633   0.000000000000   0.000000000000 AA    3.968424681368   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  3 H      4.199999809265   0.000000000000   0.000000000000 AA    7.936849362737   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  4 H      6.300000190735   0.000000000000   0.000000000000 AA   11.905274945197   0.000000000000   0.000000000000 Bohr   0.0

nuclear repulsion = 1.09195294662318
number of shells = 12
number of NR pGTOs = 28
number of NR cGTOs = 20
basis = cc-pVDZ
ecp = {}
CPU time:       317.45


******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /tmp/tmpszm_bh92
max_memory 4000 MB (current use 277 MB)
Set gradient conv threshold to 3.16228e-05
Initial guess from minao.
init E= -1.32411520792165
  HOMO = -0.222645801507464  LUMO = -0.139824821064785
cycle= 1 E= -1.81540855339492  delta_E= -0.491  |g|= 0.0655  |ddm|= 1.12
  HOMO = -0.343854318465859  LUMO = -0.100187108364392
cycle= 2 E= -1.82064456424208  delta_E= -0.00524  |g|= 0.0233  |ddm|= 0.142
  HOMO = -0.350804549017414  LUMO = -0.0938203029430941
cycle= 3 E= -1.82191901841619  delta_E= -0.00127  |g|= 0.00814  |ddm|= 0.0813
  HOMO = -0.353285713909264  LUMO = -0.0915503014915988
cycle= 4 E= -1.82208183824451  delta_E= -0.000163  |g|= 0.00235  |ddm|= 0.0358
  HOMO = -0.353424824233409  LUMO = -0.0907690405580231
cycle= 5 E= -1.82209010093929  delta_E= -8.26e-06  |g|= 0.000174  |ddm|= 0.0068
  HOMO = -0.353453044981332  LUMO = -0.0907727894508314
cycle= 6 E= -1.82209012400171  delta_E= -2.31e-08  |g|= 9.74e-06  |ddm|= 0.000384
  HOMO = -0.353452708702725  LUMO = -0.0907694756063747
cycle= 7 E= -1.82209012405463  delta_E= -5.29e-11  |g|= 5.31e-07  |ddm|= 1.5e-05
  HOMO = -0.353452912011063  LUMO = -0.0907700705546917
Extra cycle  E= -1.82209012405478  delta_E= -1.53e-13  |g|= 1.14e-07  |ddm|= 9.64e-07
converged SCF energy = -1.82209012405478


******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /tmp/tmp8eiqmqwo
max_memory 4000 MB (current use 277 MB)
Set gradient conv threshold to 3.16228e-05
Initial guess from minao.
init E= -1.32411520792165
  HOMO = -0.222645801507463  LUMO = -0.139824821064785
cycle= 1 E= -1.81540855339492  delta_E= -0.491  |g|= 0.0655  |ddm|= 1.12
  HOMO = -0.343854318465859  LUMO = -0.100187108364392
cycle= 2 E= -1.82064456424208  delta_E= -0.00524  |g|= 0.0233  |ddm|= 0.142
  HOMO = -0.350804549017414  LUMO = -0.0938203029430938
cycle= 3 E= -1.82191901841619  delta_E= -0.00127  |g|= 0.00814  |ddm|= 0.0813
  HOMO = -0.353285713909264  LUMO = -0.0915503014915991
cycle= 4 E= -1.82208183824451  delta_E= -0.000163  |g|= 0.00235  |ddm|= 0.0358
  HOMO = -0.353424824233409  LUMO = -0.0907690405580235
cycle= 5 E= -1.82209010093929  delta_E= -8.26e-06  |g|= 0.000174  |ddm|= 0.0068
  HOMO = -0.353453044981332  LUMO = -0.0907727894508314
cycle= 6 E= -1.82209012400171  delta_E= -2.31e-08  |g|= 9.74e-06  |ddm|= 0.000384
  HOMO = -0.353452708702724  LUMO = -0.0907694756063749
cycle= 7 E= -1.82209012405463  delta_E= -5.29e-11  |g|= 5.31e-07  |ddm|= 1.5e-05
  HOMO = -0.353452912011063  LUMO = -0.0907700705546917
Extra cycle  E= -1.82209012405478  delta_E= -1.55e-13  |g|= 1.14e-07  |ddm|= 9.64e-07
converged SCF energy = -1.82209012405478
